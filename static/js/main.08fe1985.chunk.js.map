{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","sortByAlpabet","setState","ALPABET","sortByLength","LENGTH","reverse","reset","this","visibleGoods","goods","sort","good1","good2","localeCompare","length","getReorderedGoods","className","Button","variant","type","onClick","size","color","List","map","good","ListItem","disablePadding","ListItemText","primary","Divider","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAsBKA,E,gIAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,cAAgB,WACd,EAAKC,SAAS,CAAEH,SAAUN,EAASU,WARvC,EAWEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUN,EAASY,UAZvC,EAeEC,QAAU,WACR,EAAKJ,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAjBzB,EAqBES,MAAQ,WACN,EAAKL,SAAS,CAAEJ,YAAY,EAAOC,SAAUN,EAASO,QAtB1D,4CAyBE,WAAU,IAAD,OACP,EAA4CQ,KAAKZ,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAEzBU,EAtDV,SACEC,EACAX,EACAD,GAEA,IAAMW,EAAY,YAAOC,GAEzB,OAAQX,GACN,KAAKN,EAASU,QACZM,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKpB,EAASY,OACZI,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAE3D,KAAKtB,EAASO,MAShB,OAJIF,GACFW,EAAaH,UAGRG,EA+BgBO,CACnBtB,EAAiBK,EAAUD,GAG7B,OACE,sBAAKmB,UAAU,MAAf,UACGpB,GACC,cAACqB,EAAA,EAAD,CACEC,QAAQ,YACRC,KAAK,SACLC,QAAS,kBAAM,EAAKnB,SAAS,CAAEL,WAAYA,KAH7C,oBASAA,GACA,qCACE,sBAAKoB,UAAU,UAAf,UACE,cAACC,EAAA,EAAD,CACEC,QAAsB,IAAbpB,EACL,YACA,WACJuB,KAAK,QACLF,KAAK,SACLC,QAASb,KAAKP,cANhB,iCAWA,cAACiB,EAAA,EAAD,CACEC,QAAsB,IAAbpB,EACL,YACA,WACJuB,KAAK,QACLF,KAAK,SACLC,QAASb,KAAKJ,aANhB,4BAWA,cAACc,EAAA,EAAD,CACEC,QAASrB,EACL,YACA,WACJwB,KAAK,QACLF,KAAK,SACLC,QAASb,KAAKF,QANhB,qBAWA,cAACY,EAAA,EAAD,CACEC,QAAQ,WACRG,KAAK,QACLC,MAAM,UACNH,KAAK,SACLC,QAASb,KAAKD,MALhB,sBAWF,cAACiB,EAAA,EAAD,CAAMP,UAAU,QAAhB,SACGR,EAAagB,KAAI,SAAAC,GAAI,OACpB,qCACE,cAACC,EAAA,EAAD,CACEC,gBAAc,EAEdX,UAAU,cAHZ,SAKE,cAACY,EAAA,EAAD,CACEC,QAASJ,KAJNA,GAOP,cAACK,EAAA,EAAD,sBAvGlB,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.08fe1985.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: true,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlpabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer, sortType, isReversed,\n    );\n\n    return (\n      <div className=\"App\">\n        {isStarted && (\n          <Button\n            variant=\"contained\"\n            type=\"button\"\n            onClick={() => this.setState({ isStarted: !isStarted })}\n          >\n            Start\n          </Button>\n        )}\n\n        {!isStarted && (\n          <>\n            <div className=\"Buttons\">\n              <Button\n                variant={sortType === 1\n                  ? 'contained'\n                  : 'outlined'}\n                size=\"small\"\n                type=\"button\"\n                onClick={this.sortByAlpabet}\n              >\n                Sort alphabetically\n              </Button>\n\n              <Button\n                variant={sortType === 2\n                  ? 'contained'\n                  : 'outlined'}\n                size=\"small\"\n                type=\"button\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </Button>\n\n              <Button\n                variant={isReversed\n                  ? 'contained'\n                  : 'outlined'}\n                size=\"small\"\n                type=\"button\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </Button>\n\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                color=\"warning\"\n                type=\"button\"\n                onClick={this.reset}\n              >\n                Reset\n              </Button>\n            </div>\n\n            <List className=\"Goods\">\n              {visibleGoods.map(good => (\n                <>\n                  <ListItem\n                    disablePadding\n                    key={good}\n                    className=\"Goods__item\"\n                  >\n                    <ListItemText\n                      primary={good}\n                    />\n                  </ListItem>\n                  <Divider />\n                </>\n              ))}\n            </List>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}