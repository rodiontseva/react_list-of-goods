{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","sortByAlpabet","setState","ALPABET","sortByLength","LENGTH","reverse","reset","this","visibleGoods","goods","sort","good1","good2","localeCompare","length","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,cAAgB,WACd,EAAKC,SAAS,CAAEH,SAAUN,EAASU,WARvC,EAWEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUN,EAASY,UAZvC,EAeEC,QAAU,WACR,EAAKJ,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAjBzB,EAqBES,MAAQ,WACN,EAAKL,SAAS,CAAEJ,YAAY,EAAOC,SAAUN,EAASO,QAtB1D,4CAyBE,WAAU,IAAD,OACP,EAA4CQ,KAAKZ,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAEzBU,EAxDV,SACEC,EACAX,EACAD,GAEA,IAAMW,EAAY,YAAOC,GAoBzB,OAlBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAKN,EAASU,QACZ,OAAOS,EAAME,cAAcD,GAE7B,KAAKpB,EAASY,OACZ,OAAOO,EAAMG,OAASF,EAAME,OAE9B,KAAKtB,EAASO,KACd,QACE,OAAO,MAITF,GACFW,EAAaH,UAGRG,EA+BgBO,CACnBtB,EAAiBK,EAAUD,GAG7B,OACE,sBAAKmB,UAAU,MAAf,UACGpB,GACC,wBACEqB,KAAK,SACLC,QAAS,kBAAM,EAAKjB,SAAS,CAAEL,WAAYA,KAF7C,oBAQAA,GACA,qCACE,wBACEqB,KAAK,SACLC,QAASX,KAAKP,cAFhB,iCAOA,wBACEiB,KAAK,SACLC,QAASX,KAAKJ,aAFhB,4BAOA,wBACEc,KAAK,SACLC,QAASX,KAAKF,QAFhB,qBAOA,wBACEY,KAAK,SACLC,QAASX,KAAKD,MAFhB,mBAOA,oBAAIU,UAAU,QAAd,SACGR,EAAaW,KAAI,SAAAC,GAAI,OACpB,oBAAeJ,UAAU,cAAzB,SAAwCI,GAA/BA,kBA3EzB,GAAyBC,IAAMC,WCtD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.04a7dea5.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: true,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlpabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer, sortType, isReversed,\n    );\n\n    return (\n      <div className=\"App\">\n        {isStarted && (\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ isStarted: !isStarted })}\n          >\n            Start\n          </button>\n        )}\n\n        {!isStarted && (\n          <>\n            <button\n              type=\"button\"\n              onClick={this.sortByAlpabet}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {visibleGoods.map(good => (\n                <li key={good} className=\"Goods__item\">{good}</li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}